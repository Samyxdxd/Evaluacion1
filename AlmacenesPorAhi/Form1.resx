<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>